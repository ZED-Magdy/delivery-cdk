name: CDK Deploy (Go)

on:
  push:
    branches:
      - main

jobs:
  build-lambda:
    runs-on: ubuntu-latest
    outputs:
      lambda_changed: ${{ steps.check-lambda-changes.outputs.changed }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Install Make
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Check for changes in Lambda function
        id: check-lambda-changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q '^deliveryAppLambda/'; then
            echo "changed=true" >> $GITHUB_ENV
            echo "changed=true"
          else
            echo "changed=false" >> $GITHUB_ENV
            echo "changed=false"
          fi

      - name: Build and package Lambda function
        if: env.changed == 'true'
        working-directory: deliveryAppLambda
        run: make build

      - name: Upload function.zip as artifact
        if: env.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: function.zip
          path: deliveryAppLambda/function.zip

  deploy:
    needs: build-lambda
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Install dependencies
        run: go mod tidy

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Download function.zip
        if: needs.build-lambda.outputs.lambda_changed == 'true'
        uses: actions/download-artifact@v4
        with:
          name: function.zip
          path: deliveryAppLambda/

      - name: Deploy CDK stack
        run: cdk deploy --require-approval never
